version: "3.7"
volumes:
  postgres-data:
    driver: local

services:
  postgres:
    image: debezium/postgres:14
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=demo
      - POSTGRES_PASSWORD=demo
      - POSTGRES_DB=demo_db
      - PGPASSWORD=demo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
  pgadmin:
    image: dpage/pgadmin4:6.12
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.11
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:5.5.11
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092

      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      #KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
    - 9092:9092
    - 29092:29092
  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
              schema-registry:
                url: "http://schema-registry:8081"
              connect:
                - name: "connect"
                  url: "http://debezium:8083"
    ports:
      - 9001:8080
    links:
      - kafka
      - schema-registry

  debezium:
    image: debezium/connect:1.9
    environment:
      # https://debezium.io/documentation/reference/2.0/configuration/avro.html
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: [kafka]
    ports:
      - 8083:8083
    links:
     - kafka
     - postgres
  debezium-ui:
    image: debezium/debezium-ui:1.9
    environment:
      KAFKA_CONNECT_URIS: http://debezium:8083
    depends_on: [kafka, debezium]
    ports:
      - 8084:8080
    links:
     - kafka
     - postgres
  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.11
    ports:
      - 8081:8081
    environment:
     - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
     - SCHEMA_REGISTRY_HOST_NAME=schema-registry
     - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
     - SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN=*
     - SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,OPTIONS
    depends_on: [zookeeper, kafka]
  schema-registry-ui:
    image: landoop/schema-registry-ui
    ports:
      - 8000:8000
    environment:
     - SCHEMAREGISTRY_URL=http://localhost:8081
    depends_on: [schema-registry]